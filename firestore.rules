rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read their own profile, admins can read any.
    // Users can only update their own profile.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || request.auth.token.role == 'admin');
      allow update: if request.auth != null && request.auth.uid == userId;
      // Create/Delete is handled by server-side functions (admin only)
      allow create, delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    // Units, Criteria, Periods are read-only for commune staff, writable by admin.
    match /units/{unitId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == 'admin';
    }
    match /criteria/{criterionId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == 'admin';
    }
    match /assessmentPeriods/{periodId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == 'admin';
    }
     match /guidanceDocuments/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == 'admin';
    }

    // Assessments: Admins can do anything. Commune staff can only manage their own commune's assessment.
    match /assessments/{assessmentId} {
      allow read: if request.auth != null && (request.auth.token.role == 'admin' || resource.data.communeId == request.auth.token.communeId);
      // Allow commune staff to create and update their own assessment.
      allow create, update: if request.auth != null && (request.auth.token.role == 'admin' || request.resource.data.communeId == request.auth.token.communeId);
      allow delete: if request.auth != null && (request.auth.token.role == 'admin' || resource.data.communeId == request.auth.token.communeId);
    }
    
    // Configurations are read-only for all, writable only by admin
    match /configurations/{configId} {
        allow read: if true;
        allow write: if request.auth.token.role == 'admin';
    }
    
    // Signature checks are written by Cloud Functions, nobody should write to them directly.
     match /signature_checks/{checkId} {
      allow read: if request.auth != null && request.auth.token.role == 'admin';
      allow write: if false; // Only backend functions can write here
    }
  }
}
